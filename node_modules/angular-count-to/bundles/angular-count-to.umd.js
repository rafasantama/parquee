(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global.ng = global.ng || {}, global.ng.angularCountTo = global.ng.angularCountTo || {}),global.ng.core));
}(this, (function (exports,_angular_core) { 'use strict';

var CountToDirective = (function () {
    /**
     * @param {?} el
     */
    function CountToDirective(el) {
        this.el = el;
        this.from = 0;
        this.duration = 4;
        this.e = this.el.nativeElement;
        this.refreshInterval = 30;
        this.step = 0;
    }
    /**
     * @return {?}
     */
    CountToDirective.prototype.ngOnInit = function () {
    };
    /**
     * @return {?}
     */
    CountToDirective.prototype.ngOnChanges = function () {
        if (this.CountTo) {
            this.start();
        }
    };
    /**
     * @return {?}
     */
    CountToDirective.prototype.calculate = function () {
        this.duration = this.duration * 1000;
        this.steps = Math.ceil(this.duration / this.refreshInterval);
        this.increment = ((this.CountTo - this.from) / this.steps);
        this.num = this.from;
    };
    /**
     * @return {?}
     */
    CountToDirective.prototype.tick = function () {
        var _this = this;
        setTimeout(function () {
            _this.num += _this.increment;
            _this.step++;
            if (_this.step >= _this.steps) {
                _this.num = _this.CountTo;
                _this.e.textContent = _this.CountTo;
            }
            else {
                _this.e.textContent = Math.round(_this.num);
                _this.tick();
            }
        }, this.refreshInterval);
    };
    /**
     * @return {?}
     */
    CountToDirective.prototype.start = function () {
        this.calculate();
        this.tick();
    };
    return CountToDirective;
}());
CountToDirective.decorators = [
    { type: _angular_core.Directive, args: [{
                selector: '[CountTo]'
            },] },
];
/**
 * @nocollapse
 */
CountToDirective.ctorParameters = function () { return [
    { type: _angular_core.ElementRef, },
]; };
CountToDirective.propDecorators = {
    'CountTo': [{ type: _angular_core.Input },],
    'from': [{ type: _angular_core.Input },],
    'duration': [{ type: _angular_core.Input },],
};
var CountToModule = (function () {
    function CountToModule() {
    }
    /**
     * Use in AppModule
     * @return {?}
     */
    CountToModule.forRoot = function () {
        return {
            ngModule: CountToModule,
            providers: []
        };
    };
    /**
     * Use in features modules with lazy loading
     * @return {?}
     */
    CountToModule.forChild = function () {
        return {
            ngModule: CountToModule,
            providers: []
        };
    };
    return CountToModule;
}());
CountToModule.decorators = [
    { type: _angular_core.NgModule, args: [{
                declarations: [
                    CountToDirective
                    // Pipes.
                    // Directives.
                ],
                exports: [
                    CountToDirective
                    // Pipes.
                    // Directives.
                ]
            },] },
];
/**
 * @nocollapse
 */
CountToModule.ctorParameters = function () { return []; };

exports.CountToDirective = CountToDirective;
exports.CountToModule = CountToModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-count-to.umd.js.map
