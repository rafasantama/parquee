{"version":3,"file":"angular-count-to.umd.js","sources":["../../src/modules/count-to.module.ts","../../src/directives/count-to.directive.ts"],"sourcesContent":["import { CountToDirective } from './../directives/count-to.directive';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nexport class CountToModule {\n/**\n * Use in AppModule\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CountToModule,\n            providers: []\n        };\n    }\n/**\n * Use in features modules with lazy loading\n * @return {?}\n */\npublic static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CountToModule,\n            providers: []\n        };\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [\n        CountToDirective\n        // Pipes.\n        // Directives.\n    ],\n    exports: [\n        CountToDirective\n        // Pipes.\n        // Directives.\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CountToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCountToModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountToModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, OnChanges, ElementRef, Input, OnInit } from '@angular/core';\nexport class CountToDirective implements OnChanges, OnInit {\n  \n  CountTo: number;\n  \n  from = 0;\n  \n  duration = 4;\n\n  e = this.el.nativeElement;\n  num: number;\n  refreshInterval = 30;\n  steps: number;\n  step = 0;\n  increment: number;\n/**\n * @param {?} el\n */\nconstructor(private el: ElementRef) {\n\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n\n  }\n/**\n * @return {?}\n */\nngOnChanges() {\n    if (this.CountTo) {\n      this.start();\n    }\n  }\n/**\n * @return {?}\n */\ncalculate() {\n    this.duration = this.duration * 1000;\n\n    this.steps = Math.ceil(this.duration / this.refreshInterval);\n    this.increment = ((this.CountTo - this.from) / this.steps);\n    this.num = this.from;\n  }\n/**\n * @return {?}\n */\ntick() {\n    setTimeout(() => {\n      this.num += this.increment;\n      this.step++;\n      if (this.step >= this.steps) {\n        this.num = this.CountTo;\n        this.e.textContent = this.CountTo;\n      } else {\n        this.e.textContent = Math.round(this.num);\n        this.tick();\n      }\n    }, this.refreshInterval);\n  }\n/**\n * @return {?}\n */\nstart() {\n    this.calculate();\n    this.tick();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[CountTo]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'CountTo': [{ type: Input },],\n'from': [{ type: Input },],\n'duration': [{ type: Input },],\n};\n}\n\nfunction CountToDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCountToDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountToDirective.ctorParameters;\n/** @type {?} */\nCountToDirective.propDecorators;\n/** @type {?} */\nCountToDirective.prototype.CountTo;\n/** @type {?} */\nCountToDirective.prototype.from;\n/** @type {?} */\nCountToDirective.prototype.duration;\n/** @type {?} */\nCountToDirective.prototype.e;\n/** @type {?} */\nCountToDirective.prototype.num;\n/** @type {?} */\nCountToDirective.prototype.refreshInterval;\n/** @type {?} */\nCountToDirective.prototype.steps;\n/** @type {?} */\nCountToDirective.prototype.step;\n/** @type {?} */\nCountToDirective.prototype.increment;\n/** @type {?} */\nCountToDirective.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Input","ElementRef","Directive"],"mappings":"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"}