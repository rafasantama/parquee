{"version":3,"file":"ngx-masonry-gallery.js","sources":["ng://ngx-masonry-gallery/lib/utilities.ts","ng://ngx-masonry-gallery/lib/masonry-gallery.component.ts","ng://ngx-masonry-gallery/lib/masonry-gallery.module.ts","ng://ngx-masonry-gallery/lib/masonry-gallery-models.ts"],"sourcesContent":["export class Utilities {\r\n    newGuid() {\r\n       return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n           // tslint:disable-next-line:no-bitwise triple-equals\r\n           const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n           return v.toString(16);\r\n       });\r\n   }\r\n}\r\n\r\nexport let utilities = new Utilities();\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport imagesLoadedMethod from 'imagesloaded';\r\nimport * as masonry from 'masonry-layout';\r\n\r\nimport { IMasonryGalleryImage } from './masonry-gallery-models';\r\nimport { utilities } from './utilities';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-masonry-gallery',\r\n    template: '<div [id]=\"galleryGuid\"></div>'\r\n})\r\nexport class MasonryGalleryComponent\r\n    implements AfterViewInit, OnDestroy, OnChanges {\r\n    @Input() images: IMasonryGalleryImage[] = [];\r\n    @Input() width: number = 330;\r\n    @Input() gutter: number = 5;\r\n    @Input() verticalGutter: number = 5;\r\n    @Input() imageClasses: string[] = [];\r\n\r\n    @Output() clickImage = new EventEmitter<IMasonryGalleryImage>();\r\n    @Output() removeComplete = new EventEmitter<any[]>();\r\n    @Output() layoutComplete = new EventEmitter<any[]>();\r\n\r\n    public readonly galleryGuid: string = utilities.newGuid();\r\n\r\n    private readonly mansonryItemSelectorClass = `grid-item-${this.galleryGuid}`;\r\n    private readonly activeImages: ActiveImage[] = [];\r\n\r\n    private msnry?: any;\r\n    private grid?: any;\r\n    private changesToProcess?: SimpleChanges;\r\n    private viewReady: boolean = false;\r\n\r\n    constructor(private renderer: Renderer2) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.images && changes.images.currentValue) {\r\n            if (!this.viewReady) {\r\n                // process images once we can\r\n                this.changesToProcess = changes;\r\n            } else {\r\n                this.processImages(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.msnry) {\r\n            this.msnry.destroy();\r\n        }\r\n    }\r\n\r\n    handleClick(image: IMasonryGalleryImage): void {\r\n        this.clickImage.next(image);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.viewReady = true;\r\n        this.initMasonry();\r\n\r\n        // process images now\r\n        if (this.changesToProcess) {\r\n            this.processImages(this.changesToProcess);\r\n            this.changesToProcess = undefined;\r\n        }\r\n    }\r\n\r\n    addImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            this.addImagesToGallery(images);\r\n        }\r\n    }\r\n\r\n    removeImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            images.forEach(image => {\r\n                this.removeImageFromGallery(image);\r\n            });\r\n        }\r\n    }\r\n\r\n    private processImages(changes: SimpleChanges): void {\r\n        const imagesToProcess = this.getAddedAndRemovesImages(changes);\r\n\r\n        // add images to mansonry layout\r\n        this.addImages(imagesToProcess.addedImages);\r\n\r\n        // removes images from layout\r\n        this.removeImages(imagesToProcess.removedImages);\r\n    }\r\n\r\n    private getAddedAndRemovesImages(\r\n        changes: SimpleChanges\r\n    ): {\r\n            addedImages: IMasonryGalleryImage[];\r\n            removedImages: IMasonryGalleryImage[];\r\n        } {\r\n        let addedImages: IMasonryGalleryImage[] = [];\r\n        const removedImages: IMasonryGalleryImage[] = [];\r\n\r\n        const newImagesValue = changes.images\r\n            .currentValue as IMasonryGalleryImage[];\r\n        const oldImagesValue = changes.images\r\n            .previousValue as IMasonryGalleryImage[];\r\n\r\n        if (!oldImagesValue) {\r\n            // all images are new ones\r\n            addedImages = changes.images.currentValue;\r\n        } else {\r\n            // process added images\r\n            newImagesValue.forEach(newImage => {\r\n                const existingImage = oldImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === newImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is new\r\n                    addedImages.push(newImage);\r\n                }\r\n            });\r\n\r\n            // process removed images\r\n            oldImagesValue.forEach(oldImage => {\r\n                const existingImage = newImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === oldImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is removed\r\n                    removedImages.push(oldImage);\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            addedImages: addedImages,\r\n            removedImages: removedImages\r\n        };\r\n    }\r\n\r\n    private initMasonry(): void {\r\n        this.grid = document.getElementById(this.galleryGuid);\r\n\r\n        // remove all existing data from grid\r\n        this.grid.innerHTML = '';\r\n\r\n        if (!this.grid) {\r\n            throw Error(\r\n                `Could not init mansory due to non existing elem with id '${\r\n                this.galleryGuid\r\n                }'`\r\n            );\r\n        }\r\n\r\n        this.msnry = new masonry(this.grid, {\r\n            // options...\r\n            itemSelector: '.' + this.mansonryItemSelectorClass,\r\n            columnWidth: this.width,\r\n            gutter: this.gutter,\r\n        });\r\n\r\n        const that = this;\r\n\r\n        this.msnry.on('layoutComplete', function (items) {\r\n            that.layoutComplete.next(items);\r\n        });\r\n\r\n        this.msnry.on('removeComplete', function (items) {\r\n            that.removeComplete.next(items);\r\n        });\r\n    }\r\n\r\n    private removeImageFromGallery(image: IMasonryGalleryImage): void {\r\n        // get image guid\r\n        const imageIdResult = this.activeImages.find(\r\n            m => m.image.imageUrl.toLowerCase() === image.imageUrl.toLowerCase()\r\n        );\r\n\r\n        if (!imageIdResult) {\r\n            // image was not found, this is probably an error\r\n            console.warn(\r\n                `Image with url '${\r\n                image.imageUrl\r\n                }' was not found. If you are adding images, make sure to 'replace' the images array with a new one\r\n                so that detection change can be executed instead of just adding an image to array\r\n                (which doesn't fire change detection on array property)`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // find image based on its id\r\n        const imageElem = document.getElementById(imageIdResult.id);\r\n\r\n        if (!imageElem) {\r\n            // image was not found in DOM\r\n            console.warn(\r\n                `Image with id '{${\r\n                imageIdResult.id\r\n                }}' was not found in DOM. Have you manipulated the DOM in some way?`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // remove image from gallery\r\n        this.msnry.remove(imageElem);\r\n\r\n        // refresh layout\r\n        this.msnry.layout();\r\n\r\n        // remove image from array\r\n        for (let i = 0; i < this.activeImages.length; i++) {\r\n            const idWithImage = this.activeImages[i];\r\n            if (\r\n                idWithImage.image.imageUrl.toLowerCase() ===\r\n                imageIdResult.image.imageUrl.toLowerCase()\r\n            ) {\r\n                this.activeImages.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private addImagesToGallery(images: IMasonryGalleryImage[]): void {\r\n        if (!this.grid) {\r\n            throw Error(\r\n                'Grid element is not yet ready, are you trying to add image too soon?'\r\n            );\r\n        }\r\n\r\n        const imagesWrapper = this.renderer.createElement('span');\r\n\r\n        images.forEach(image => {\r\n            // generate unique image id\r\n            const imageId = this.getImageId();\r\n\r\n            // create element\r\n            const imageElem = this.renderer.createElement('img');\r\n            imageElem.setAttribute('id', imageId);\r\n            imageElem.setAttribute('alt', image.alt ? image.alt : 'no description');\r\n            imageElem.setAttribute('src', image.imageUrl);\r\n            // note - images are hidden by default and should be shown only after they are loaded\r\n            imageElem.setAttribute(\r\n                'style',\r\n                `display: none; width: ${this.width}px; margin-bottom: ${\r\n                this.verticalGutter\r\n                }px`\r\n            );\r\n            imageElem.className = this.getImageClass();\r\n            imageElem.addEventListener('click', () => {\r\n                this.handleClick(image);\r\n            });\r\n\r\n            // store guid with this image\r\n            this.activeImages.push({\r\n                id: imageId,\r\n                image: image\r\n            });\r\n\r\n            // add to dom and mansory & refresh layout\r\n            this.renderer.appendChild(imagesWrapper, imageElem);\r\n        });\r\n\r\n        // add html to dom\r\n        this.renderer.appendChild(this.grid, imagesWrapper);\r\n\r\n        // add images once they are loaded\r\n        const imgLoad = imagesLoadedMethod(imagesWrapper);\r\n        imgLoad.on('progress', (instance, image) => {\r\n            if (image.isLoaded) {\r\n                this.renderer.appendChild(this.grid, image.img);\r\n                // unhide image\r\n                this.renderer.setStyle(image.img, 'display', 'block');\r\n                this.msnry.appended(image.img);\r\n                this.msnry.reloadItems();\r\n            }\r\n        });\r\n    }\r\n\r\n    private getImageClass(): string {\r\n        let className = this.mansonryItemSelectorClass;\r\n\r\n        if (this.imageClasses && this.imageClasses.length > 0) {\r\n            const customClass = this.imageClasses.join(' ');\r\n\r\n            className += ' ' + customClass;\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    private getImageId(): string {\r\n        return this.galleryGuid + '_' + utilities.newGuid();\r\n    }\r\n}\r\n\r\ninterface ActiveImage {\r\n    id: string;\r\n    image: IMasonryGalleryImage;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MasonryGalleryComponent } from './masonry-gallery.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n    exports: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n})\r\nexport class MasonryGalleryModule { }\r\n","export class IMasonryGalleryImage {\r\n    public imageUrl: string;\r\n    public alt?: string;\r\n}\r\n"],"names":[],"mappings":"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"}