{"version":3,"file":"ngx-masonry-gallery.umd.js","sources":["ng://ngx-masonry-gallery/lib/utilities.ts","ng://ngx-masonry-gallery/lib/masonry-gallery.component.ts","ng://ngx-masonry-gallery/lib/masonry-gallery.module.ts","ng://ngx-masonry-gallery/lib/masonry-gallery-models.ts"],"sourcesContent":["export class Utilities {\r\n    newGuid() {\r\n       return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n           // tslint:disable-next-line:no-bitwise triple-equals\r\n           const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n           return v.toString(16);\r\n       });\r\n   }\r\n}\r\n\r\nexport let utilities = new Utilities();\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport imagesLoadedMethod from 'imagesloaded';\r\nimport * as masonry from 'masonry-layout';\r\n\r\nimport { IMasonryGalleryImage } from './masonry-gallery-models';\r\nimport { utilities } from './utilities';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-masonry-gallery',\r\n    template: '<div [id]=\"galleryGuid\"></div>'\r\n})\r\nexport class MasonryGalleryComponent\r\n    implements AfterViewInit, OnDestroy, OnChanges {\r\n    @Input() images: IMasonryGalleryImage[] = [];\r\n    @Input() width: number = 330;\r\n    @Input() gutter: number = 5;\r\n    @Input() verticalGutter: number = 5;\r\n    @Input() imageClasses: string[] = [];\r\n\r\n    @Output() clickImage = new EventEmitter<IMasonryGalleryImage>();\r\n    @Output() removeComplete = new EventEmitter<any[]>();\r\n    @Output() layoutComplete = new EventEmitter<any[]>();\r\n\r\n    public readonly galleryGuid: string = utilities.newGuid();\r\n\r\n    private readonly mansonryItemSelectorClass = `grid-item-${this.galleryGuid}`;\r\n    private readonly activeImages: ActiveImage[] = [];\r\n\r\n    private msnry?: any;\r\n    private grid?: any;\r\n    private changesToProcess?: SimpleChanges;\r\n    private viewReady: boolean = false;\r\n\r\n    constructor(private renderer: Renderer2) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.images && changes.images.currentValue) {\r\n            if (!this.viewReady) {\r\n                // process images once we can\r\n                this.changesToProcess = changes;\r\n            } else {\r\n                this.processImages(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.msnry) {\r\n            this.msnry.destroy();\r\n        }\r\n    }\r\n\r\n    handleClick(image: IMasonryGalleryImage): void {\r\n        this.clickImage.next(image);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.viewReady = true;\r\n        this.initMasonry();\r\n\r\n        // process images now\r\n        if (this.changesToProcess) {\r\n            this.processImages(this.changesToProcess);\r\n            this.changesToProcess = undefined;\r\n        }\r\n    }\r\n\r\n    addImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            this.addImagesToGallery(images);\r\n        }\r\n    }\r\n\r\n    removeImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            images.forEach(image => {\r\n                this.removeImageFromGallery(image);\r\n            });\r\n        }\r\n    }\r\n\r\n    private processImages(changes: SimpleChanges): void {\r\n        const imagesToProcess = this.getAddedAndRemovesImages(changes);\r\n\r\n        // add images to mansonry layout\r\n        this.addImages(imagesToProcess.addedImages);\r\n\r\n        // removes images from layout\r\n        this.removeImages(imagesToProcess.removedImages);\r\n    }\r\n\r\n    private getAddedAndRemovesImages(\r\n        changes: SimpleChanges\r\n    ): {\r\n            addedImages: IMasonryGalleryImage[];\r\n            removedImages: IMasonryGalleryImage[];\r\n        } {\r\n        let addedImages: IMasonryGalleryImage[] = [];\r\n        const removedImages: IMasonryGalleryImage[] = [];\r\n\r\n        const newImagesValue = changes.images\r\n            .currentValue as IMasonryGalleryImage[];\r\n        const oldImagesValue = changes.images\r\n            .previousValue as IMasonryGalleryImage[];\r\n\r\n        if (!oldImagesValue) {\r\n            // all images are new ones\r\n            addedImages = changes.images.currentValue;\r\n        } else {\r\n            // process added images\r\n            newImagesValue.forEach(newImage => {\r\n                const existingImage = oldImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === newImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is new\r\n                    addedImages.push(newImage);\r\n                }\r\n            });\r\n\r\n            // process removed images\r\n            oldImagesValue.forEach(oldImage => {\r\n                const existingImage = newImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === oldImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is removed\r\n                    removedImages.push(oldImage);\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            addedImages: addedImages,\r\n            removedImages: removedImages\r\n        };\r\n    }\r\n\r\n    private initMasonry(): void {\r\n        this.grid = document.getElementById(this.galleryGuid);\r\n\r\n        // remove all existing data from grid\r\n        this.grid.innerHTML = '';\r\n\r\n        if (!this.grid) {\r\n            throw Error(\r\n                `Could not init mansory due to non existing elem with id '${\r\n                this.galleryGuid\r\n                }'`\r\n            );\r\n        }\r\n\r\n        this.msnry = new masonry(this.grid, {\r\n            // options...\r\n            itemSelector: '.' + this.mansonryItemSelectorClass,\r\n            columnWidth: this.width,\r\n            gutter: this.gutter,\r\n        });\r\n\r\n        const that = this;\r\n\r\n        this.msnry.on('layoutComplete', function (items) {\r\n            that.layoutComplete.next(items);\r\n        });\r\n\r\n        this.msnry.on('removeComplete', function (items) {\r\n            that.removeComplete.next(items);\r\n        });\r\n    }\r\n\r\n    private removeImageFromGallery(image: IMasonryGalleryImage): void {\r\n        // get image guid\r\n        const imageIdResult = this.activeImages.find(\r\n            m => m.image.imageUrl.toLowerCase() === image.imageUrl.toLowerCase()\r\n        );\r\n\r\n        if (!imageIdResult) {\r\n            // image was not found, this is probably an error\r\n            console.warn(\r\n                `Image with url '${\r\n                image.imageUrl\r\n                }' was not found. If you are adding images, make sure to 'replace' the images array with a new one\r\n                so that detection change can be executed instead of just adding an image to array\r\n                (which doesn't fire change detection on array property)`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // find image based on its id\r\n        const imageElem = document.getElementById(imageIdResult.id);\r\n\r\n        if (!imageElem) {\r\n            // image was not found in DOM\r\n            console.warn(\r\n                `Image with id '{${\r\n                imageIdResult.id\r\n                }}' was not found in DOM. Have you manipulated the DOM in some way?`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // remove image from gallery\r\n        this.msnry.remove(imageElem);\r\n\r\n        // refresh layout\r\n        this.msnry.layout();\r\n\r\n        // remove image from array\r\n        for (let i = 0; i < this.activeImages.length; i++) {\r\n            const idWithImage = this.activeImages[i];\r\n            if (\r\n                idWithImage.image.imageUrl.toLowerCase() ===\r\n                imageIdResult.image.imageUrl.toLowerCase()\r\n            ) {\r\n                this.activeImages.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private addImagesToGallery(images: IMasonryGalleryImage[]): void {\r\n        if (!this.grid) {\r\n            throw Error(\r\n                'Grid element is not yet ready, are you trying to add image too soon?'\r\n            );\r\n        }\r\n\r\n        const imagesWrapper = this.renderer.createElement('span');\r\n\r\n        images.forEach(image => {\r\n            // generate unique image id\r\n            const imageId = this.getImageId();\r\n\r\n            // create element\r\n            const imageElem = this.renderer.createElement('img');\r\n            imageElem.setAttribute('id', imageId);\r\n            imageElem.setAttribute('alt', image.alt ? image.alt : 'no description');\r\n            imageElem.setAttribute('src', image.imageUrl);\r\n            // note - images are hidden by default and should be shown only after they are loaded\r\n            imageElem.setAttribute(\r\n                'style',\r\n                `display: none; width: ${this.width}px; margin-bottom: ${\r\n                this.verticalGutter\r\n                }px`\r\n            );\r\n            imageElem.className = this.getImageClass();\r\n            imageElem.addEventListener('click', () => {\r\n                this.handleClick(image);\r\n            });\r\n\r\n            // store guid with this image\r\n            this.activeImages.push({\r\n                id: imageId,\r\n                image: image\r\n            });\r\n\r\n            // add to dom and mansory & refresh layout\r\n            this.renderer.appendChild(imagesWrapper, imageElem);\r\n        });\r\n\r\n        // add html to dom\r\n        this.renderer.appendChild(this.grid, imagesWrapper);\r\n\r\n        // add images once they are loaded\r\n        const imgLoad = imagesLoadedMethod(imagesWrapper);\r\n        imgLoad.on('progress', (instance, image) => {\r\n            if (image.isLoaded) {\r\n                this.renderer.appendChild(this.grid, image.img);\r\n                // unhide image\r\n                this.renderer.setStyle(image.img, 'display', 'block');\r\n                this.msnry.appended(image.img);\r\n                this.msnry.reloadItems();\r\n            }\r\n        });\r\n    }\r\n\r\n    private getImageClass(): string {\r\n        let className = this.mansonryItemSelectorClass;\r\n\r\n        if (this.imageClasses && this.imageClasses.length > 0) {\r\n            const customClass = this.imageClasses.join(' ');\r\n\r\n            className += ' ' + customClass;\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    private getImageId(): string {\r\n        return this.galleryGuid + '_' + utilities.newGuid();\r\n    }\r\n}\r\n\r\ninterface ActiveImage {\r\n    id: string;\r\n    image: IMasonryGalleryImage;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MasonryGalleryComponent } from './masonry-gallery.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n    exports: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n})\r\nexport class MasonryGalleryModule { }\r\n","export class IMasonryGalleryImage {\r\n    public imageUrl: string;\r\n    public alt?: string;\r\n}\r\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","Renderer2","Input","Output","NgModule","CommonModule"],"mappings":"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"}