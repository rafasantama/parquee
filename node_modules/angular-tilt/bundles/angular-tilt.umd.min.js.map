{"version":3,"sources":["ng://angular-tilt/lib/angular-tilt.ts","ng://angular-tilt/lib/angular-tilt.directive.ts","ng://angular-tilt/lib/angular-tilt.module.ts"],"names":["VanillaTilt","element","settings","Node","this","width","height","left","top","transitionTimeout","updateCall","updateBind","update","bind","resetBind","reset","extendSettings","elementListener","getElementListener","reverse","glare","isSettingTrue","glarePrerender","gyroscope","prepareGlare","addEventListeners","prototype","setting","mouseEventElement","document","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","window","removeEventListeners","removeEventListener","destroy","clearTimeout","cancelAnimationFrame","vanillaTilt","event","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","posX","posY","clientX","clientY","requestAnimationFrame","style","willChange","setTransition","pageX","pageY","transform","perspective","glareElement","opacity","getValues","x","y","Math","min","max","tiltX","toFixed","tiltY","percentageX","percentageY","angle","atan2","PI","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","axis","scale","dispatchEvent","CustomEvent","detail","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","Object","assign","position","overflow","pointer-events","background-image","transform-origin","updateGlareSize","_this","transition","speed","easing","setTimeout","defaultSettings","max-glare","glare-prerender","mouse-event-element","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","e","init","elements","NodeList","slice","call","Array","forEach","AngularTiltDirective","el","ngOnInit","tilt","nativeElement","tiltSettings","Directive","args","selector","ElementRef","Input","AngularTiltModule","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { VanillaTiltSettings } from \"./angular-tilt-settings.model\";\n\nexport class VanillaTilt {\n  width: any;\n  height: any;\n  left: any;\n  top: any;\n  transitionTimeout: any;\n  updateCall: any;\n  updateBind: any;\n  resetBind: any;\n  element: any;\n  settings: any;\n  elementListener: any;\n  reverse: any;\n  glare: any;\n  glarePrerender: any;\n  gyroscope: any;\n  onMouseEnterBind: any;\n  onMouseMoveBind: any;\n  onMouseLeaveBind: any;\n  onWindowResizeBind: any;\n  onDeviceOrientationBin: any;\n  onDeviceOrientationBind: any;\n  event: any;\n  glareElement: any;\n  glareElementWrapper: any;\n\n  constructor(element: Node, settings: VanillaTiltSettings = {}) {\n    if (!(element instanceof Node)) {\n      throw \"Can't initialize VanillaTilt because \" +\n        element +\n        \" is not a Node.\";\n    }\n\n    this.width = null;\n    this.height = null;\n    this.left = null;\n    this.top = null;\n    this.transitionTimeout = null;\n    this.updateCall = null;\n\n    this.updateBind = this.update.bind(this);\n    this.resetBind = this.reset.bind(this);\n\n    this.element = element;\n    this.settings = this.extendSettings(settings);\n    this.elementListener = this.getElementListener();\n\n    this.reverse = this.settings.reverse ? -1 : 1;\n\n    this.glare = this.isSettingTrue(this.settings.glare);\n    this.glarePrerender = this.isSettingTrue(this.settings[\"glare-prerender\"]);\n    this.gyroscope = this.isSettingTrue(this.settings.gyroscope);\n\n    if (this.glare) {\n      this.prepareGlare();\n    }\n\n    this.addEventListeners();\n  }\n\n  isSettingTrue(setting) {\n    return setting === \"\" || setting === true || setting === 1;\n  }\n\n  getElementListener(): Node {\n    if (!this.settings || !this.settings[\"mouse-event-element\"]) {\n      return this.element;\n    }\n\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n      const mouseEventElement = document.querySelector(\n        this.settings[\"mouse-event-element\"]\n      );\n\n      if (mouseEventElement) {\n        return mouseEventElement;\n      }\n    }\n\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\n      return this.settings[\"mouse-event-element\"];\n    }\n  }\n\n  addEventListeners(): void {\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n    this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n\n    if (this.glare) {\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\n    }\n\n    if (this.gyroscope) {\n      window.addEventListener(\n        \"deviceorientation\",\n        this.onDeviceOrientationBind\n      );\n    }\n  }\n\n  /**\n   * Method remove event listeners from current this.elementListener\n   */\n  removeEventListeners(): void {\n    this.elementListener.removeEventListener(\n      \"mouseenter\",\n      this.onMouseEnterBind\n    );\n    this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n    this.elementListener.removeEventListener(\n      \"mouseleave\",\n      this.onMouseLeaveBind\n    );\n\n    if (this.gyroscope) {\n      window.removeEventListener(\n        \"deviceorientation\",\n        this.onDeviceOrientationBind\n      );\n    }\n\n    if (this.glare) {\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.transitionTimeout);\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.reset();\n\n    this.removeEventListeners();\n    this.element.vanillaTilt = null;\n    delete this.element.vanillaTilt;\n\n    this.element = null;\n  }\n\n  onDeviceOrientation(event) {\n    if (event.gamma === null || event.beta === null) {\n      return;\n    }\n\n    this.updateElementPosition();\n\n    const totalAngleX =\n      this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n    const totalAngleY =\n      this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n\n    const degreesPerPixelX = totalAngleX / this.width;\n    const degreesPerPixelY = totalAngleY / this.height;\n\n    const angleX = event.gamma - this.settings.gyroscopeMinAngleX;\n    const angleY = event.beta - this.settings.gyroscopeMinAngleY;\n\n    const posX = angleX / degreesPerPixelX;\n    const posY = angleY / degreesPerPixelY;\n\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = {\n      clientX: posX + this.left,\n      clientY: posY + this.top\n    };\n\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  }\n\n  onMouseEnter() {\n    this.updateElementPosition();\n    this.element.style.willChange = \"transform\";\n    this.setTransition();\n  }\n\n  onMouseMove(event) {\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = event;\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  }\n\n  onMouseLeave() {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      requestAnimationFrame(this.resetBind);\n    }\n  }\n\n  reset() {\n    this.event = {\n      pageX: this.left + this.width / 2,\n      pageY: this.top + this.height / 2\n    };\n\n    if (this.element && this.element.style) {\n      this.element.style.transform =\n        `perspective(${this.settings.perspective}px) ` +\n        `rotateX(0deg) ` +\n        `rotateY(0deg) ` +\n        `scale3d(1, 1, 1)`;\n    }\n\n    if (this.glare) {\n      this.glareElement.style.transform =\n        \"rotate(180deg) translate(-50%, -50%)\";\n      this.glareElement.style.opacity = \"0\";\n    }\n  }\n\n  getValues() {\n    let x = (this.event.clientX - this.left) / this.width;\n    let y = (this.event.clientY - this.top) / this.height;\n\n    x = Math.min(Math.max(x, 0), 1);\n    y = Math.min(Math.max(y, 0), 1);\n\n    let tiltX = (\n      this.reverse *\n      (this.settings.max / 2 - x * this.settings.max)\n    ).toFixed(2);\n    let tiltY = (\n      this.reverse *\n      (y * this.settings.max - this.settings.max / 2)\n    ).toFixed(2);\n    let angle =\n      Math.atan2(\n        this.event.clientX - (this.left + this.width / 2),\n        -(this.event.clientY - (this.top + this.height / 2))\n      ) *\n      (180 / Math.PI);\n\n    return {\n      tiltX: tiltX,\n      tiltY: tiltY,\n      percentageX: x * 100,\n      percentageY: y * 100,\n      angle: angle\n    };\n  }\n\n  updateElementPosition() {\n    let rect = this.element.getBoundingClientRect();\n\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  update() {\n    let values = this.getValues();\n\n    this.element.style.transform =\n      \"perspective(\" +\n      this.settings.perspective +\n      \"px) \" +\n      \"rotateX(\" +\n      (this.settings.axis === \"x\" ? 0 : values.tiltY) +\n      \"deg) \" +\n      \"rotateY(\" +\n      (this.settings.axis === \"y\" ? 0 : values.tiltX) +\n      \"deg) \" +\n      \"scale3d(\" +\n      this.settings.scale +\n      \", \" +\n      this.settings.scale +\n      \", \" +\n      this.settings.scale +\n      \")\";\n\n    if (this.glare) {\n      this.glareElement.style.transform = `rotate(${\n        values.angle\n      }deg) translate(-50%, -50%)`;\n      this.glareElement.style.opacity = `${(values.percentageY *\n        this.settings[\"max-glare\"]) /\n        100}`;\n    }\n\n    this.element.dispatchEvent(\n      new CustomEvent(\"tiltChange\", {\n        detail: values\n      })\n    );\n\n    this.updateCall = null;\n  }\n\n  /**\n   * Appends the glare element (if glarePrerender equals false)\n   * and sets the default style\n   */\n  prepareGlare() {\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n    if (!this.glarePrerender) {\n      // Create glare element\n      const jsTiltGlare = document.createElement(\"div\");\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\n\n      const jsTiltGlareInner = document.createElement(\"div\");\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n\n      jsTiltGlare.appendChild(jsTiltGlareInner);\n      this.element.appendChild(jsTiltGlare);\n    }\n\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n\n    if (this.glarePrerender) {\n      return;\n    }\n\n    Object.assign(this.glareElementWrapper.style, {\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      \"pointer-events\": \"none\"\n    });\n\n    Object.assign(this.glareElement.style, {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      \"pointer-events\": \"none\",\n      \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n      width: `${this.element.offsetWidth * 2}px`,\n      height: `${this.element.offsetWidth * 2}px`,\n      transform: \"rotate(180deg) translate(-50%, -50%)\",\n      \"transform-origin\": \"0% 0%\",\n      opacity: \"0\"\n    });\n  }\n\n  updateGlareSize() {\n    Object.assign(this.glareElement.style, {\n      width: `${this.element.offsetWidth * 2}`,\n      height: `${this.element.offsetWidth * 2}`\n    });\n  }\n\n  onWindowResize() {\n    this.updateGlareSize();\n  }\n\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n    this.element.style.transition =\n      this.settings.speed + \"ms \" + this.settings.easing;\n    if (this.glare)\n      this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${\n        this.settings.easing\n      }`;\n\n    this.transitionTimeout = setTimeout(() => {\n      this.element.style.transition = \"\";\n      if (this.glare) {\n        this.glareElement.style.transition = \"\";\n      }\n    }, this.settings.speed);\n  }\n\n  extendSettings(settings: VanillaTiltSettings) {\n    let defaultSettings = {\n      reverse: false,\n      max: 35,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: 1,\n      speed: 300,\n      transition: true,\n      axis: null,\n      glare: false,\n      \"max-glare\": 1,\n      \"glare-prerender\": false,\n      \"mouse-event-element\": null,\n      reset: true,\n      gyroscope: true,\n      gyroscopeMinAngleX: -45,\n      gyroscopeMaxAngleX: 45,\n      gyroscopeMinAngleY: -45,\n      gyroscopeMaxAngleY: 45\n    };\n\n    let newSettings = {};\n    for (var property in defaultSettings) {\n      if (property in settings) {\n        newSettings[property] = settings[property];\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n        let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n        try {\n          newSettings[property] = JSON.parse(attribute);\n        } catch (e) {\n          newSettings[property] = attribute;\n        }\n      } else {\n        newSettings[property] = defaultSettings[property];\n      }\n    }\n\n    return newSettings;\n  }\n\n  static init(elements, settings) {\n    if (elements instanceof Node) {\n      elements = [elements];\n    }\n\n    if (elements instanceof NodeList) {\n      elements = [].slice.call(elements);\n    }\n\n    if (!(elements instanceof Array)) {\n      return;\n    }\n\n    elements.forEach(element => {\n      if (!(\"vanillaTilt\" in element)) {\n        element.vanillaTilt = new VanillaTilt(element, settings);\n      }\n    });\n  }\n}\n","import { VanillaTiltSettings } from \"./angular-tilt-settings.model\";\nimport { Directive, ElementRef, Input } from \"@angular/core\";\nimport { VanillaTilt } from \"./angular-tilt\";\n\n@Directive({\n  selector: \"[aTilt]\"\n})\nexport class AngularTiltDirective {\n  tilt: any;\n  @Input(\"tiltSettings\") tiltSettings: VanillaTiltSettings;\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.tilt = new VanillaTilt(this.el.nativeElement, this.tiltSettings);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { AngularTiltDirective } from \"./angular-tilt.directive\";\n\n@NgModule({\n  declarations: [AngularTiltDirective],\n  imports: [],\n  exports: [AngularTiltDirective]\n})\nexport class AngularTiltModule {}\n"]}