{"version":3,"sources":["../typed.ts"],"names":[],"mappings":"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","file":"typed.js","sourceRoot":"","sourcesContent":["export class Typed {\n    element: any\n    options: any\n    textContent: string\n    strPos: number\n    cursor: any\n    cursorBlinking: boolean\n    typingComplete: boolean\n    timeout: any\n\n    constructor (element: any, options: any) {\n        const defaults: any = {\n            typeSpeed: 0,\n            startDelay: 0,\n            showCursor: true,\n            hideCursorOnComplete: false,\n            onComplete: () => {}\n        }\n\n        this.element = element\n        this.options = {...defaults, ...options}\n        this.textContent = element.textContent.trim()\n        this.strPos = 0\n        this.typingComplete = false\n\n        this.element.textContent = ''\n        this.appendAnimationCss()\n    }\n\n    public begin () {\n        if (this.typingComplete) {\n            return this.restart()\n        }\n\n        this.insertCursor()\n        \n        this.timeout = setTimeout(() => {\n            this.typewrite()\n        }, this.options.startDelay)\n    }\n\n    private typewrite() {\n        const humanize = this.humanizer(this.options.typeSpeed)\n\n        this.timeout = setTimeout(() => {\n            this.toggleBlinking(false)\n\n            if (this.strPos === this.textContent.length) {\n                this.doneTyping()\n            } else {\n                this.keepTyping()\n            }\n        }, humanize)\n    }\n\n    private keepTyping () {\n        if (this.strPos === 0) {\n            this.toggleBlinking(false)\n        }\n\n        this.strPos += 1\n        const nextString = this.textContent.substr(0, this.strPos)\n        this.replaceText(nextString)\n        this.typewrite()\n    }\n\n    private doneTyping () {\n        this.toggleBlinking(true)\n\n        if (this.textContent.length === this.strPos) {\n            this.complete()\n        }\n    }\n\n    private complete () {\n        if (this.options.hideCursorOnComplete) {\n            this.removeCursor()\n        }\n        this.typingComplete = true\n        this.options.onComplete()\n    }\n\n    private restart () {\n        if (!this.typingComplete) {\n            return\n        }\n\n        clearTimeout(this.timeout)\n        this.replaceText('')\n\n        this.removeCursor()\n\n        this.strPos = 0\n        this.typingComplete = false\n        this.begin()\n\n    }\n    \n    private insertCursor () {\n        if (this.cursor) {\n            return\n        }\n\n        this.cursor = document.createElement('span')\n        this.cursor.className = 'typed-cursor'\n        this.cursor.innerHTML = '|'\n\n        this.element.parentNode && this.element.parentNode.insertBefore(this.cursor, this.element.nextSibling)\n    }\n\n    private removeCursor () {\n        if (this.cursor && this.cursor.parentNode) {\n            this.cursor.parentNode.removeChild(this.cursor)\n            this.cursor = null\n        }\n    }\n\n    private replaceText (str: string) {\n        this.element.textContent = str\n    }\n\n    private humanizer (speed: number) {\n        return Math.round(Math.random() * speed / 2) + speed\n    }\n\n    private toggleBlinking (isBlinking: boolean) {\n        if (!this.cursor) {\n            return\n        }\n\n        if (this.cursorBlinking === isBlinking) {\n            return\n        }\n\n        this.cursorBlinking = isBlinking\n        const status = isBlinking ? 'infinite' : 0\n        this.cursor.style.animationIterationCount = status\n    }\n\n    private appendAnimationCss () {\n        if (this.options.showCursor) {\n            if (document.head.querySelector('#typing')) {\n                return\n            }\n\n            let css = document.createElement('style')\n            css.type = 'text/css'\n            css.id = 'typing'\n\n            const innerCss = `\n                .typed-cursor{\n                    opacity: 1;\n                    animation: typedjsBlink 0.7s infinite;\n                    -webkit-animation: typedjsBlink 0.7s infinite;\n                    animation: typedjsBlink 0.7s infinite;\n                }\n                @keyframes typedjsBlink{\n                    50% { opacity: 0.0; }\n                }\n                @-webkit-keyframes typedjsBlink{\n                    0% { opacity: 1; }\n                    50% { opacity: 0.0; }\n                    100% { opacity: 1; }\n                }\n            `\n\n            css.innerHTML = innerCss\n            document.head.appendChild(css)\n        }\n    }\n}"]}